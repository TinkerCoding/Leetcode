/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @return {number}
 */
var sumRootToLeaf = function(root) {
    let res = 0;
    dfs(root);
    return res;
    function dfs(root, num = "") {
        if (!root) return;
        if (!root.left && !root.right) {
            res += parseInt(num + root.val, 2);
            return;
            
        }
        dfs(root.left, num + root.val);
        dfs(root.right, num + root.val);
    }
    // Time Complexity: 0(N)
    // Space Complexity: 0(H)
                
};